require_relative 'boot'

require "rails"
# Pick the frameworks you want:
require "active_model/railtie"
require "active_job/railtie"
require "active_record/railtie"
require "action_controller/railtie"
require "action_mailer/railtie"
require "action_view/railtie"
require "action_cable/engine"
# require "sprockets/railtie"
# require "rails/test_unit/railtie"

# Require the gems listed in Gemfile, including any gems
# you've limited to :test, :development, or :production.
Bundler.require(*Rails.groups)

module FairmentApi
  class Application < Rails::Application
    # Initialize configuration defaults for originally generated Rails version.
    config.load_defaults 5.1

    Preparing to unpack .../netpbm_2%3a10.0-15.3_amd64.deb ...
                 Unpacking netpbm (2:10.0-15.3) ...
                                  Processing triggers for hicolor-icon-theme (0.15-0ubuntu1) ...
                                                                             Processing triggers for mime-support (3.59ubuntu1) ...
                                                                                                                  Processing triggers for man-db (2.7.5-1) ...
                                                                                                                                                 Processing triggers for libc-bin (2.23-0ubuntu7) ...
                                                                                                                                                                                  Setting up imagemagi
    # Settings in config/environments/* take precedence over those specified here.
    # Application configuration should go into files in config/initializers
    # -- all .rb files in that directory are automatically loaded.

    # Only loads a smaller set of middleware suitable for API only apps.
    # Middleware like session, flash, cookies can be added back manually.
    # Skip views, helpers and assets when generating a new resource.
    config.api_only = true
  end
end
